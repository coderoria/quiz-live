doctype html
html(lang="en")
    head
        meta(charset="UTF-8")
        meta(http-equiv="X-UA-Compatible", content="IE=edge")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css")
        script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js") 
        script(src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js") 
        link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css")
        title Quiz Live Overlay
    body.bg-dark
        div(style="position:absolute;top:2em;left:2em;")
            div.bg-primary(style="border-radius:50%;").text-light
                i.fa-solid.fa-square-poll-horizontal
        .webcam-wrapper
            .webcam-container.border-primary
            .webcam-container.border-primary
        .quiz-box.border.border-danger.mt-5
            .question.mx-auto.bg-primary.text-light.p-2.text-center(id="question" style="transform: translateX(200%);")
                span 
            .answer-wrapper.mx-auto.mt-2
                .answer.bg-primary.text-light.p-2(id="answerA" style="transform:translateY(100vh);")
                    span.id A
                    span.text 
                .answer.bg-primary.text-light.p-2(id="answerB" style="transform:translateY(100vh);")
                    span.id B
                    span.text 
            .answer-wrapper.mx-auto.mt-2
                .answer.bg-primary.text-light.p-2(id="answerC" style="transform:translateY(100vh);")
                    span.id C
                    span.text 
                .answer.bg-primary.text-light.p-2(id="answerD" style="transform:translateY(100vh);")
                    span.id D
                    span.text 

        style.
            body {
                overflow: hidden;
            }

            .webcam-wrapper {
                display: flex;
                justify-content: space-around;
                margin-top: 5%;
            }

            .webcam-container {
                height: 450px;
                width: 800px;
                border:6px solid;
                border-radius: 10px;
            }

            .question {
                width: 40vw;
                border-radius: 20px;
                font-weight: bold;
            }

            .answer-wrapper {
                display:flex;
                justify-content: space-between;
                width:40vw;
            }

            .answer {
                border-radius: 20px;
                width: 48%;
                display: table;
            }

            .answer .id {
                font-weight: bold;
                display: table-cell;
                vertical-align: middle;
                width: 1em;
            }

            .answer .text { style="transform:translateY(100vh);"
                vertical-align: middle;
            }

            .quiz-box {
                font-size: 1.2em
            }
        script(src="/socket.io/socket.io.js")
        script(src="/js/anime.min.js") 
        script.
            const socket = io();

            socket.on("newQuestion", (question) => {
                
            });

            function showNewQuestion(question) {
                $("#question span").html(question.question);
                $("#answerA .text").html(question.answerOne);
                $("#answerB .text").html(question.answerTwo);
                $("#answerC .text").html(question.answerThree);
                $("#answerD .text").html(question.answerFour);

                anime({
                    targets: '.question',
                    translateX: '0%',
                    easing: 'easeInOutQuad',
                    complete: async (anim) => {
                        for(let i of ["A","B","C","D"]) {
                            await anime({
                                targets: '#answer'+i,
                                translateY: '0vh',
                                easing: 'easeInOutQuad'
                            }).finished;
                        }
                    }
                });
            }